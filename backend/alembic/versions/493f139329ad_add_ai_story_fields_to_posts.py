"""Add AI story fields to posts

Revision ID: 493f139329ad
Revises: 20b6dc546a69
Create Date: 2025-08-10 16:33:30.221388

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '493f139329ad'
down_revision: Union[str, None] = '20b6dc546a69'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
# Define the enums to create in Postgres
content_source_enum = sa.Enum('ai', 'user', name='contentsource')
length_label_enum = sa.Enum('flash', 'short', 'medium', 'long', name='lengthlabel')
story_status_enum = sa.Enum('draft', 'generated', 'published', 'rejected', name='storystatus')


def upgrade() -> None:
    """Upgrade schema."""
        # First create the enums in the DB
    content_source_enum.create(op.get_bind(), checkfirst=True)
    length_label_enum.create(op.get_bind(), checkfirst=True)
    story_status_enum.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('posts', sa.Column('source', sa.Enum('ai', 'user', name='contentsource'), nullable=True))
    op.add_column('posts', sa.Column('genre', sa.String(), nullable=True))
    op.add_column('posts', sa.Column('tone', sa.String(), nullable=True))
    op.add_column('posts', sa.Column('length_label', sa.Enum('flash', 'short', 'medium', 'long', name='lengthlabel'), nullable=True))
    op.add_column('posts', sa.Column('summary', sa.String(), nullable=True))
    op.add_column('posts', sa.Column('words_count', sa.Integer(), nullable=True))
    op.add_column('posts', sa.Column('status', sa.Enum('draft', 'generated', 'published', 'rejected', name='storystatus'), nullable=True))
    op.add_column('posts', sa.Column('prompt', sa.Text(), nullable=True))
    op.add_column('posts', sa.Column('model_name', sa.String(), nullable=True))
    op.add_column('posts', sa.Column('temperature', sa.Float(), nullable=True))
    op.add_column('posts', sa.Column('provider_message_id', sa.String(), nullable=True))
    op.add_column('posts', sa.Column('parent_id', sa.Integer(), nullable=True))
    op.add_column('posts', sa.Column('version', sa.Integer(), nullable=True))
    op.add_column('posts', sa.Column('last_feedback', sa.Text(), nullable=True))
    op.create_index(op.f('ix_posts_genre'), 'posts', ['genre'], unique=False)
    op.create_index(op.f('ix_posts_source'), 'posts', ['source'], unique=False)
    op.create_index(op.f('ix_posts_status'), 'posts', ['status'], unique=False)
    op.create_index(op.f('ix_posts_tone'), 'posts', ['tone'], unique=False)
    op.create_foreign_key(None, 'posts', 'posts', ['parent_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.drop_index(op.f('ix_posts_tone'), table_name='posts')
    op.drop_index(op.f('ix_posts_status'), table_name='posts')
    op.drop_index(op.f('ix_posts_source'), table_name='posts')
    op.drop_index(op.f('ix_posts_genre'), table_name='posts')
    op.drop_column('posts', 'last_feedback')
    op.drop_column('posts', 'version')
    op.drop_column('posts', 'parent_id')
    op.drop_column('posts', 'provider_message_id')
    op.drop_column('posts', 'temperature')
    op.drop_column('posts', 'model_name')
    op.drop_column('posts', 'prompt')
    op.drop_column('posts', 'status')
    op.drop_column('posts', 'words_count')
    op.drop_column('posts', 'summary')
    op.drop_column('posts', 'length_label')
    op.drop_column('posts', 'tone')
    op.drop_column('posts', 'genre')
    op.drop_column('posts', 'source')
    story_status_enum.drop(op.get_bind(), checkfirst=True)
    length_label_enum.drop(op.get_bind(), checkfirst=True)
    content_source_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
